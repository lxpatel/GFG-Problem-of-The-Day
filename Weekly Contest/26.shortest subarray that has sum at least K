Problem Statement : Given an array A of integers and another number, K. Find the shortest subarray that has sum at least K. If there is no such subarray return -1.
Example 1:
Input:
N = 5, K = 3
АП = {0,0,2,1,1}
Output: 2
Explanation: Sum of A[2] + A[3] is equal to K.



Solution : 

class Solution {
    public int subarraySumK(int[] A, int N, int K) {
        int[] prefixSum = new int[N + 1];
        for (int i = 0; i < N; i++) {
            prefixSum[i + 1] = prefixSum[i] + A[i];
        }

        int minLength = N + 1;

        int left = 0, right = 0, sum = 0;

        while (right <= N) {
            if (sum >= K) {
                minLength = Math.min(minLength, right - left);
                sum -= A[left++];
            } else {
                if (right < N) {
                    sum += A[right++];
                } else {
                    break;
                }
            }
        }

        return minLength == N + 1 ? -1 : minLength;
    }
}
